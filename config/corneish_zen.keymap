/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td_scr_dn: td_scr_dn {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SCR_DN";
            #binding-cells = <0>;
            bindings = <&kp PAGE_DOWN>, <&kp END>;
        };

        td_scr_up: td_scr_up {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SCR_UP";
            #binding-cells = <0>;
            bindings = <&kp PG_UP>, <&kp HOME>;
        };

        ws0: ws0 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS0";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_0)>, <&kp LS(LA(N0))>;
        };

        ws1: ws1 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS1";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1)>, <&kp LS(LA(NUMBER_1))>;
        };

        ws2: ws2 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS2";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2)>, <&kp LS(LA(NUMBER_2))>;
        };

        ws3: ws3 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS3";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_3)>, <&kp LS(LA(NUMBER_3))>;
        };

        ws4: ws4 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS4";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_4)>, <&kp LS(LA(NUMBER_4))>;
        };

        ws5: ws5 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS5";
            #binding-cells = <0>;
            bindings = <&kp LA(N5)>, <&kp LS(LA(N5))>;
        };

        ws6: ws6 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS6";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_6)>, <&kp LS(LA(NUMBER_6))>;
        };

        ws7: ws7 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS7";
            #binding-cells = <0>;
            bindings = <&kp LA(N7)>, <&kp LS(LA(N7))>;
        };

        ws8: ws8 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS8";
            #binding-cells = <0>;
            bindings = <&kp LA(N8)>, <&kp LS(LA(N8))>;
        };

        ws9: ws9 {
            compatible = "zmk,behavior-tap-dance";
            label = "WS9";
            #binding-cells = <0>;
            bindings = <&kp LA(N9)>, <&kp LS(LA(N9))>;
        };

        screenShot: screenShot {
            compatible = "zmk,behavior-tap-dance";
            label = "SCREENSHOT";
            #binding-cells = <0>;
            bindings = <&kp PRINTSCREEN>, <&kp LG(LS(N5))>;
        };

        closeApp: closeApp {
            compatible = "zmk,behavior-tap-dance";
            label = "CLOSEAPP";
            #binding-cells = <0>;
            bindings = <&kp F4>, <&kp LA(F4)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc_key {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        tab_key {
            bindings = <&kp TAB>;
            key-positions = <7 8>;
        };

        ent_combo {
            bindings = <&kp ENTER>;
            key-positions = <31 32>;
        };

        game_esc {
            bindings = <&kp ESC>;
            key-positions = <14 13 15 12>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "normal_def_layer";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LC(B)  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I       &kp O    &kp P     &kp GRAVE
&sk LALT   &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K       &kp L    &kp SEMI  &kp SQT
&none      &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp BACKSPACE
                         &kp LGUI  &mo 2  &kp LCTRL    &kp SPACE  &mo 3  &kp LSHIFT
            >;
        };

        game {
            display-name = "game_def_layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E      &kp R  &kp T           &kp Y    &kp U   &kp I       &kp O    &kp P     &kp GRAVE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D      &kp F  &kp G           &kp H    &kp J   &kp K       &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C      &kp V  &kp B           &kp N    &kp M   &kp COMMA   &kp DOT  &kp FSLH  &kp BSPC
                              &kp SPACE  &mo 4  &kp LEFT_ALT    &kp RET  &trans  &kp ESCAPE
            >;
        };

        num {
            display-name = "number";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE   &kp APOS   &kp LBKT  &kp LS(LPAR)  &kp LS(TILDE)    &kp LS(PLUS)  &kp LS(RPAR)    &kp RBKT  &kp EQUAL  &kp LS(PIPE)   &trans
&trans  &kp N1      &kp N2     &kp N3    &kp N4        &kp N5           &kp N6        &kp N7          &kp N8    &kp N9     &kp N0         &trans
&trans  &sk LSHIFT  &sk LCTRL  &sk LALT  &sk LCMD      &kp BACKSPACE    &kp MINUS     &kp UNDERSCORE  &trans    &trans     &kp BACKSLASH  &trans
                               &trans    &trans        &trans           &trans        &trans          &trans
            >;
        };

        util {
            display-name = "utilties";
            bindings = <
&kp F8  &trans  &kp C_PREVIOUS  &kp C_PP   &kp C_NEXT    &kp F5     &td_scr_up  &kp C_VOLUME_UP    &kp UP    &kp C_BRIGHTNESS_INC  &kp F6      &closeApp
&kp F7  &trans  &kp LSHFT       &kp LCTRL  &kp LEFT_ALT  &trans     &kp BSPC    &kp LEFT           &kp DOWN  &kp RIGHT             &kp C_MUTE  &kp PRINTSCREEN
&kp F1  &trans  &trans          &trans     &trans        &kp F12    &td_scr_dn  &kp C_VOLUME_DOWN  &kp F11   &kp C_BRIGHTNESS_DEC  &kp F2      &screenShot
                                &trans     &trans        &trans     &trans      &trans             &trans
            >;

            label = "utility";
        };

        game2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp U     &kp N6  &kp N7  &kp N8  &kp N9   &kp N0   &trans
&kp I   &kp J   &kp L   &kp M   &kp K   &kp Y     &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "game additional";
        };

        ws {
            bindings = <
&trans  &trans  &kp LC(LS(TAB))  &kp LS(LA(TAB))  &kp LG(LS(TAB))  &trans    &bt BT_CLR  &kp LG(TAB)   &kp LA(TAB)   &kp LC(TAB)   &trans        &trans
&trans  &ws1    &ws2             &ws3             &ws4             &ws5      &ws6        &ws7          &ws8          &ws9          &ws0          &trans
&trans  &to 1   &trans           &trans           &to 0            &trans    &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
                                 &trans           &trans           &trans    &trans      &trans        &trans
            >;

            label = "work space";
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ws_activate {
            if-layers = <3 2>;
            then-layer = <5>;
        };
    };
};
